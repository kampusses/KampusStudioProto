// <auto-generated />
using System;
using KampusStudioProto.Models.Services.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace KampusStudioProto.Migrations
{
    [DbContext(typeof(MyDbContext))]
    partial class MyDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.2");

            modelBuilder.Entity("KampusStudioProto.Models.Entities.Comune", b =>
                {
                    b.Property<string>("CodiceCatastale")
                        .HasColumnType("varchar(4)")
                        .HasColumnName("codiceCatastale")
                        .HasComment("Codice catastale")
                        .UseCollation("latin1_swedish_ci")
                        .HasCharSet("latin1");

                    b.Property<int>("Abitanti")
                        .HasColumnType("int(11)")
                        .HasColumnName("abitanti")
                        .HasComment("Numero abitanti");

                    b.Property<string>("Cap")
                        .IsRequired()
                        .HasColumnType("varchar(5)")
                        .HasColumnName("cap")
                        .HasComment("CAP")
                        .UseCollation("latin1_swedish_ci")
                        .HasCharSet("latin1");

                    b.Property<string>("CodiceIstat")
                        .IsRequired()
                        .HasColumnType("varchar(6)")
                        .HasColumnName("codiceIstat")
                        .HasComment("Codice Istat")
                        .UseCollation("latin1_swedish_ci")
                        .HasCharSet("latin1");

                    b.Property<int>("CodiceProvincia")
                        .HasColumnType("int(11)")
                        .HasColumnName("codiceProvincia")
                        .HasComment("Provincia");

                    b.Property<int>("CodiceRegione")
                        .HasColumnType("int(11)")
                        .HasColumnName("codiceRegione")
                        .HasComment("Regione");

                    b.Property<int>("FlagProvincia")
                        .HasColumnType("int(11)")
                        .HasColumnName("flagProvincia")
                        .HasComment("Flag provincia");

                    b.Property<int>("FlagRegione")
                        .HasColumnType("int(1)")
                        .HasColumnName("flagRegione");

                    b.Property<string>("NomeComune")
                        .IsRequired()
                        .HasColumnType("varchar(30)")
                        .HasColumnName("nomeComune")
                        .HasComment("Nome comune")
                        .UseCollation("latin1_swedish_ci")
                        .HasCharSet("latin1");

                    b.Property<string>("Prefisso")
                        .IsRequired()
                        .HasColumnType("varchar(5)")
                        .HasColumnName("prefisso")
                        .HasComment("Prefisso telefonico")
                        .UseCollation("latin1_swedish_ci")
                        .HasCharSet("latin1");

                    b.HasKey("CodiceCatastale")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "CodiceProvincia" }, "codiceProvincia");

                    b.HasIndex(new[] { "CodiceRegione" }, "codiceRegione");

                    b.ToTable("comuni");

                    b
                        .HasComment("Elenco dei comuni italiani");
                });

            modelBuilder.Entity("KampusStudioProto.Models.Entities.Nazione", b =>
                {
                    b.Property<string>("Codice3")
                        .HasColumnType("varchar(4)")
                        .HasColumnName("codice3")
                        .UseCollation("latin1_swedish_ci")
                        .HasCharSet("latin1");

                    b.Property<string>("Belfiore")
                        .HasColumnType("varchar(4)")
                        .HasColumnName("belfiore")
                        .UseCollation("latin1_swedish_ci")
                        .HasCharSet("latin1");

                    b.Property<string>("Codice2")
                        .HasColumnType("varchar(4)")
                        .HasColumnName("codice2")
                        .UseCollation("latin1_swedish_ci")
                        .HasCharSet("latin1");

                    b.Property<string>("Codice3Padre")
                        .HasColumnType("varchar(3)")
                        .HasColumnName("codice3Padre")
                        .UseCollation("latin1_swedish_ci")
                        .HasCharSet("latin1");

                    b.Property<int?>("CodiceArea")
                        .HasColumnType("int(11)")
                        .HasColumnName("codiceArea");

                    b.Property<int?>("CodiceContinente")
                        .HasColumnType("int(11)")
                        .HasColumnName("codiceContinente");

                    b.Property<string>("DenominazioneEn")
                        .HasColumnType("varchar(32)")
                        .HasColumnName("denominazioneEN")
                        .UseCollation("latin1_swedish_ci")
                        .HasCharSet("latin1");

                    b.Property<string>("DenominazioneIt")
                        .HasColumnType("varchar(36)")
                        .HasColumnName("denominazioneIT")
                        .UseCollation("latin1_swedish_ci")
                        .HasCharSet("latin1");

                    b.HasKey("Codice3")
                        .HasName("PRIMARY");

                    b.ToTable("nazioni");
                });

            modelBuilder.Entity("KampusStudioProto.Models.Entities.Provincia", b =>
                {
                    b.Property<int>("CodiceProvincia")
                        .HasColumnType("int(11)")
                        .HasColumnName("codiceProvincia");

                    b.Property<string>("NomeProvincia")
                        .IsRequired()
                        .HasColumnType("varchar(28)")
                        .HasColumnName("nomeProvincia")
                        .UseCollation("latin1_swedish_ci")
                        .HasCharSet("latin1");

                    b.Property<string>("SiglaProvincia")
                        .IsRequired()
                        .HasColumnType("varchar(2)")
                        .HasColumnName("siglaProvincia")
                        .UseCollation("latin1_swedish_ci")
                        .HasCharSet("latin1");

                    b.HasKey("CodiceProvincia")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "CodiceRegione" }, "codiceRegione")
                        .HasDatabaseName("codiceRegione1");

                    b.ToTable("province");
                });

            modelBuilder.Entity("KampusStudioProto.Models.Entities.Regione", b =>
                {
                    b.Property<int>("CodiceRegione")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("codiceRegione")
                        .HasComment("Codice Regione");

                    b.Property<string>("CapoluogoCodiceCatastale")
                        .HasColumnType("varchar(4)");

                    b.Property<string>("CodiceCapoluogo")
                        .IsRequired()
                        .HasColumnType("varchar(4)")
                        .HasColumnName("codiceCapoluogo")
                        .HasComment("Codice capoluogo di regione")
                        .UseCollation("latin1_swedish_ci")
                        .HasCharSet("latin1");

                    b.Property<string>("NomeRegione")
                        .IsRequired()
                        .HasColumnType("varchar(30)")
                        .HasColumnName("nomeRegione")
                        .HasComment("Nome Regione")
                        .UseCollation("latin1_swedish_ci")
                        .HasCharSet("latin1");

                    b.Property<int>("RipartizioneGeografica")
                        .HasColumnType("int(11)")
                        .HasColumnName("ripartizioneGeografica")
                        .HasComment("Ripartizione geografica");

                    b.HasKey("CodiceRegione")
                        .HasName("PRIMARY");

                    b.HasIndex("CapoluogoCodiceCatastale");

                    b.HasIndex(new[] { "CodiceCapoluogo" }, "codiceCapoluogo");

                    b.ToTable("regioni");

                    b
                        .HasComment("Elenco delle regioni italiane");
                });

            modelBuilder.Entity("KampusStudioProto.Models.Entities.Comune", b =>
                {
                    b.HasOne("KampusStudioProto.Models.Entities.Provincia", "Provincia")
                        .WithMany("Comuni")
                        .HasForeignKey("CodiceProvincia")
                        .HasConstraintName("comuni_ibfk_1")
                        .IsRequired();

                    b.HasOne("KampusStudioProto.Models.Entities.Regione", "Regione")
                        .WithMany("Comuni")
                        .HasForeignKey("CodiceRegione")
                        .HasConstraintName("comuni_ibfk_2")
                        .IsRequired();

                    b.Navigation("Provincia");

                    b.Navigation("Regione");
                });

            modelBuilder.Entity("KampusStudioProto.Models.Entities.Provincia", b =>
                {
                    b.HasOne("KampusStudioProto.Models.Entities.Regione", "Regione")
                        .WithMany("Province")
                        .HasForeignKey("CodiceRegione")
                        .HasConstraintName("province_ibfk_1")
                        .IsRequired();

                    b.Navigation("Regione");
                });

            modelBuilder.Entity("KampusStudioProto.Models.Entities.Regione", b =>
                {
                    b.HasOne("KampusStudioProto.Models.Entities.Comune", "Capoluogo")
                        .WithMany()
                        .HasForeignKey("CapoluogoCodiceCatastale");

                    b.Navigation("Capoluogo");
                });

            modelBuilder.Entity("KampusStudioProto.Models.Entities.Provincia", b =>
                {
                    b.Navigation("Comuni");
                });

            modelBuilder.Entity("KampusStudioProto.Models.Entities.Regione", b =>
                {
                    b.Navigation("Comuni");

                    b.Navigation("Province");
                });
#pragma warning restore 612, 618
        }
    }
}
